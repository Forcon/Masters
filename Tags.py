import sqlite3
import re
import numpy as np
"""
Программа для настройки списка тегов из базы
"""

SQL_Connect = sqlite3.connect('Masters.db')
cursor = SQL_Connect.cursor()

text_seach = 'кот серебряная подвеска'
name_coll = 'Все в зеленом'

cursor.execute("""SELECT Autor, Url_Item, Tags, Favor, id FROM Items
            WHERE (Word_Search = '{:s}') AND (Use_in_Coll <> '{:s}' OR Use_in_Coll IS NULL) ORDER BY Favor DESC LIMIT 30""".format (text_seach, name_coll)) # Извлечение при сортировке
# cursor.execute("""SELECT Autor, Url_Item, Tags, Favor, id FROM Items
#                     WHERE Use_in_Coll IS NULL ORDER BY Favor DESC LIMIT 30""" .format(name_coll)) # Извлечение при сортировке

adress_list = cursor.fetchall()
# print(adress_list)

# tag_list = [
# 'кот,чеширский кот,кулон,колье,подарок девушке,коты,фурнитура под серебро,колье из кожи,серебряный,котэ,коты и кошки,колье чокер,колье под шею,бейл-подвеска',
# 'стимпанк,котенок,синий,подарок девушке,коты,подарок мужчине,подарок на новый год,подарок на день рождения,подарок подруге,подарок женщине,подарок на рождество,примитивизм,котэ,наивное искусство,подвеска кошка,стимпанк кулон,лубок,наивный стиль,стимпанк стиль,наив арт'
# , 'кот,серебро,кулон,сувенир,котик,котики,серебряный,серебро 999'
# , 'подарок девушке,оригинальный подарок,серебряная подвеска,серебряный кулон,подарок девочке,серебряный,спящий кот,авторский кулон,авторское серебро,подвеска кошка,хранитель снов,украшения животные,оберег талисман амулет,кот котик котэ котенок,спящий кот кулон,подвеска кот спящий,сплюшка сон сонный,звездная ночь соня,спящий котик подушка,талисман оберег подарок'
# , 'кот,кошка,котенок,кулон,подарок,подвеска,ручная работа,авторские украшения,кошечка,котик,подарок на новый год,серебро 925 пробы,ювелирное украшение,подвеска кот,серебряный,чернение,оригинальное украшение,серебряный кот,gorey,кот гори'
# , 'кот,луна,оранжевый,терракотовый,ручная работа,авторские украшения,авторская работа,подарок для девушки,украшения ручной работы,серебряные украшения,серебряный кулон,подвеска из серебра,необычные украшения,ночь,простой кулон,авторская ручная работа,кирпичный,стильный кулон,кулон из серебра,кулон с кошкой'
# , 'бежевый,кулон кошка,серебряная подвеска,серебряный кулон,подвеска из серебра,подвеска кот,необычная подвеска,Кулон кот,подвеска с кошкой,звериный,Кулон ручной работы,кулон из серебра,подвеска кошка,кулон с котом,кулон с кошкой,дизайнерский кулон,необчный кулон'
# , 'кот,оберег,кошка,ирландия,кельтский,амулет,подвеска,талисман,кельты,бронзовый,спящий,серебряный,кошачий,трилистник,трискель,трикветра'
# ,'белый,колье на цепочке,серебряное колье,подвеска с кошкой,колье из серебра,колье с котом,звериный,необычное колье,легкое колье,колье ручной работы,колье с кошкой,колье ручная работа,колье минимализм,колье серебро купить,колье не как у всех,небольшое колье серебро,короткое колье из серебра,подвеска с котом серебро,колье в подарок кот,колье черненое'
# , 'кот,серебро,лев,зеленый,котик,серебро 925 пробы,ювелирные украшения,украшения ручной работы,серебряная подвеска,серебряный,милый котик,ювелирная работа,висящий кот'
# , 'серебряный кулон,подвеска из серебра,звериный,Кулон ручной работы,кулон из серебра,подвеска серебряная,подвеска серебро 925,серебряный ключик,ключ из серебра,необычный кулон серебро,кулон серебро купить,кулон в подарок купить,кулон ключ серебро,кулон кот серебро,день кошек,ключик из серебра,красивый серебряный кулон,подвеска в виде кота,кулон серебро без камней,кулон серебряный кот'
# ]

url_list = []
autor_list = []
srt_item = []
id_list = []
for el in adress_list:
    if el[0] not in autor_list:
        autor_list.extend(el[0].split(','))
        url_list.extend(el[1].split(','))
        srt_item.extend(el[2].split(','))
        id_list.append(el[4])

# for el in id_list:
#     cursor.execute("UPDATE Items SET Use_in_Coll = ('{:s}') WHERE id = ('{:}')".format(name_coll, el))

SQL_Connect.commit()  # Применение изменений к базе данных
cursor.close()
SQL_Connect.close()

# print(autor_list)
# print(url_list)
# print(id_list)

tag_summ = {}
for el in srt_item:
    if el not in tag_summ: tag_summ[el] = 1
    else: tag_summ[el] += 1

srt_tag = [] # -------- Самые популярны тэги
for i, el in enumerate(sorted(tag_summ.items(), key=lambda x: x[1], reverse=True)):
    if i < 20: srt_tag.append(el[0])

print(srt_tag)

print(url_list[0])